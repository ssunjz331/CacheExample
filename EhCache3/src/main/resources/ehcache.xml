<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.ehcache.org/v3"
        xmlns:jsr107="http://www.ehcache.org/v3/jsr107"
        xsi:schemaLocation="
            http://www.ehcache.org/v3 http://www.ehcache.org/schema/ehcache-core-3.0.xsd
            http://www.ehcache.org/v3/jsr107 http://www.ehcache.org/schema/ehcache-107-ext-3.0.xsd">
    <!-- config : XML 구성의 루트 요소이다. -->

<!--    <cache alias="squareCache"> &lt;!&ndash; cache 요소는 CachceManager에 의해 작성되고 관리될 Cache 인스턴스를 나타낸다. Cache<k,v> 형태로 인스턴스가 생성된다. alias에는 캐시의 이름을 지정한다. &ndash;&gt;-->
<!--        <key-type>java.lang.Long</key-type> &lt;!&ndash; key-type 요소는 Cache 인스턴스에 저장될 캐시의 키의 FQCN을 지정한다. 즉, 키의 타입을 명시해주면 된다. 기본 값은 java.lang.Object 이다. &ndash;&gt;-->
<!--        <value-type>java.math.BigDecimal</value-type> &lt;!&ndash; value-type 요소는 Cache 인스턴스에 저장된 값의 FQCN을 지정한다. 기본 값은 java.lang.Object 이다. &ndash;&gt;-->
<!--        <expiry> &lt;!&ndash; expiry는 캐시 만료기간에 대해 설정하는 요소이다. &ndash;&gt;-->
<!--            <ttl unit="seconds">30</ttl> &lt;!&ndash; ttl에는 캐시 만료 시간을 지정하며 unit에는 단위를 지정한다. 해당 요소는 30초 뒤 캐시가 만료되는 것으로 지정되어 있다. &ndash;&gt;-->
<!--            &lt;!&ndash; unit은 days, hours, minutes, seconds, millis, micros, nanos 를 세팅할 수 있다. &ndash;&gt;-->
<!--        </expiry>-->

<!--        <listeners> &lt;!&ndash; listeners는 Cache의 리스너를 등록하는 요소이다. &ndash;&gt;-->
<!--            <listener>-->
<!--                <class>com.example.ehcache3.controller.CacheEventLogger</class> &lt;!&ndash; 캐싱처리에 대한 리스너가 등록된 클래스의 FQCN을 등록한다. &ndash;&gt;-->
<!--                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>-->
<!--                <event-ordering-mode>UNORDERED</event-ordering-mode>-->
<!--                <events-to-fire-on>CREATED</events-to-fire-on>-->
<!--                <events-to-fire-on>EXPIRED</events-to-fire-on>-->
<!--            </listener>-->
<!--        </listeners>-->

<!--        <resources> &lt;!&ndash; resources는 캐시 데이터의 저장 공간과 용량을 지정한다. 만약 힙 메모리만 사용한다면 <heap> 요소만으로 대체할 수 있다.  &ndash;&gt;-->
<!--            <heap unit="entries">2</heap> &lt;!&ndash; heap은 JVM 힙 메모리에 캐시를 저장하도록 세팅하는 요소이다. &ndash;&gt;-->
<!--            <offheap unit="MB">10</offheap> &lt;!&ndash; offheap은 JVM 힙 메모리 외부의 메모리에 캐시를 저장하도록 세팅하는 요소이다. &ndash;&gt;-->
<!--        </resources>-->
<!--    </cache>-->

<!--    <cache alias="taskCache">-->
<!--        <key-type>org.springframework.cache.interceptor.SimpleKey</key-type> &lt;!&ndash; 만약에 캐시의 키로 지정할 것이 없다면 key-type를 이렇게 세팅하고 캐싱할 데이터를 Serialize(정규화)한다. &ndash;&gt;-->
<!--        <value-type>java.util.List</value-type>-->
<!--        <expiry>-->
<!--            <ttl unit="seconds">30</ttl>-->
<!--        </expiry>-->

<!--        <listeners>-->
<!--            <listener>-->
<!--                <class>com.example.ehcache3.controller.CacheEventLogger</class>-->
<!--                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>-->
<!--                <event-ordering-mode>UNORDERED</event-ordering-mode>-->
<!--                <events-to-fire-on>CREATED</events-to-fire-on>-->
<!--                <events-to-fire-on>UPDATED</events-to-fire-on>-->
<!--                <events-to-fire-on>EXPIRED</events-to-fire-on>-->
<!--                <events-to-fire-on>REMOVED</events-to-fire-on>-->
<!--                <events-to-fire-on>EVICTED</events-to-fire-on>-->
<!--            </listener>-->
<!--        </listeners>-->

<!--        <resources>-->
<!--            <heap unit="entries">2</heap> &lt;!&ndash; entries는 항목이다. 2로 설정했으면 총 2개의 항목을 힙에 저장할 수 있다는 뜻. 만약 entries 수를 넘어가면 가장 예전에 저장했던 캐시부터 1개씩 삭제하면서 새로운 캐시를 저장한다. &ndash;&gt;-->
<!--            <offheap unit="MB">10</offheap>-->
<!--        </resources>-->
<!--    </cache>-->

    <cache alias="employeeCache">
        <key-type>java.lang.Long</key-type>
        <value-type>com.example.ehcache3.model.Employee</value-type>
        <expiry>
            <ttl unit="seconds">10000</ttl>
        </expiry>
        <listeners>
            <listener>
                <class>com.example.ehcache3.controller.CacheEventLogger</class>
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>UPDATED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
                <events-to-fire-on>REMOVED</events-to-fire-on>
                <events-to-fire-on>EVICTED</events-to-fire-on>
            </listener>
        </listeners>
        <resources>
            <heap unit="entries">2000</heap>
            <offheap unit="MB">100</offheap>
        </resources>
    </cache>

<!--    <cache alias="taskByUserIdCache">-->
<!--        <key-type>java.lang.Integer</key-type>-->
<!--        <value-type>java.util.List</value-type>-->
<!--        <expiry>-->
<!--            <ttl unit="seconds">30</ttl>-->
<!--        </expiry>-->

<!--        <listeners>-->
<!--            <listener>-->
<!--                <class>com.example.ehcache.demo.config.CacheEventLogger</class>-->
<!--                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>-->
<!--                <event-ordering-mode>UNORDERED</event-ordering-mode>-->
<!--                <events-to-fire-on>CREATED</events-to-fire-on>-->
<!--                <events-to-fire-on>EXPIRED</events-to-fire-on>-->
<!--            </listener>-->
<!--        </listeners>-->

<!--        <resources>-->
<!--            <heap unit="entries">2</heap>-->
<!--            <offheap unit="MB">10</offheap>-->
<!--        </resources>-->
<!--    </cache>-->
</config>